---
# determine the status of each manager node and break them
# into two groups:
#   - swarm_manager_operational (swarm is running and active)
#   - swarm_manager_bootstrap (host needs to be joined to the cluster)
- hosts: tag_jra_environment_{{ env }}:&tag_jra_swarm_instance_type_swarm_manager
  become: true
  tasks:
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm: ' | cut -d ' ' -f2
      register: swarm_status

    - name: create swarm_manager_operational group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_manager_operational
      with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
      when: "'active' in hostvars[item].swarm_status.stdout_lines"
      run_once: true

    - name: create swarm_manager_bootstrap group
      add_host:
        hostname: "{{ item }}"
        groups: swarm_manager_bootstrap
      with_items: "{{ ansible_play_hosts | default(play_hosts) }}"
      when: "'active' not in hostvars[item].swarm_status.stdout_lines"
      run_once: true


# Deploy the Global Proxies Stack
# Note - It is expected that the global proxy overlay networks have been created before this step.
- hosts: swarm_manager_operational[0]
  become: true
  tasks:
    - name: create the docker script files directory it doesn't already exist
      shell: >
        sudo mkdir -p /usr/local/jra/scripts/compose/jarch-infra-apps-services-stacks
      ignore_errors: yes

    - name: copy the stack files
      copy:
        src: "{{ stack_file_dir }}/"
        dest: /usr/local/jra/scripts/compose/jarch-infra-apps-services-stacks/

    - name: deploy jarch-infra-proxy stack
      shell: >
        ENV_DOMAIN_PREFIX={{ env_domain_prefix }} docker stack deploy jarch-infra-proxy -c {{ stack_file_name_infra_proxies }}
      args:
        chdir: /usr/local/jra/scripts/compose/jarch-infra-apps-services-stacks/

    - name: deploy jarch-app-proxy stack
      shell: >
        ENV_DOMAIN_PREFIX={{ env_domain_prefix }} docker stack deploy jarch-app-proxy -c {{ stack_file_name_app_proxies }}
      args:
        chdir: /usr/local/jra/scripts/compose/jarch-infra-apps-services-stacks/

# Deploy the Docker Services
- hosts: swarm_manager_operational[0]
  become: true
  tasks:
    - name: deploy jarch-infra-docker stack
      shell: >
        ENV_DOMAIN_PREFIX={{ env_domain_prefix }} docker stack deploy jarch-infra-docker -c {{ stack_file_name_docker_services }}
      args:
        chdir: /usr/local/jra/scripts/compose/jarch-infra-apps-services-stacks/

